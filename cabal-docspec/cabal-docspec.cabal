cabal-version:      2.2
name:               cabal-docspec
version:            0.0.0.20240720
synopsis:           Run examples in your docs
category:           Development
description:
  Main difference to @doctest@ is that @cabal-docspec@ doesn't
  rely on @ghc@ library.

license:            GPL-2.0-or-later
license-files:
  LICENSE
  LICENSE.GPLv2
  LICENSE.GPLv3

author:             Oleg Grenrus <oleg.grenrus@iki.fi>
maintainer:         Oleg Grenrus <oleg.grenrus@iki.fi>
tested-with:        GHC ==9.8.2
extra-source-files:
  cabal-docspec.1
  Changelog.md

source-repository head
  type:     git
  location: https://github.com/phadej/cabal-extras.git
  subdir:   cabal-docspec

library internal-cpphs
  default-language: Haskell2010
  hs-source-dirs:   cpphs
  build-depends:
    , base         >=4.12     && <5
    , directory    ^>=1.3.0.2
    , polyparse    ^>=1.13
    , time-compat  ^>=1.9.4

  exposed-modules:
    Language.Preprocessor.Cpphs
    Language.Preprocessor.Unlit

  other-modules:
    Language.Preprocessor.Cpphs.CppIfdef
    Language.Preprocessor.Cpphs.HashDefine
    Language.Preprocessor.Cpphs.MacroPass
    Language.Preprocessor.Cpphs.Options
    Language.Preprocessor.Cpphs.Position
    Language.Preprocessor.Cpphs.ReadFirst
    Language.Preprocessor.Cpphs.RunCpphs
    Language.Preprocessor.Cpphs.SymTab
    Language.Preprocessor.Cpphs.Tokenise

library cabal-docspec-internal
  default-language:   Haskell2010
  hs-source-dirs:     src
  ghc-options:        -Wall

  -- Main module
  exposed-modules:    CabalDocspec.Main

  -- rest of the implementation
  exposed-modules:
    CabalDocspec.Cpp
    CabalDocspec.Diff
    CabalDocspec.Doctest.Example
    CabalDocspec.Doctest.Extract
    CabalDocspec.Doctest.Parse
    CabalDocspec.ExprVars
    CabalDocspec.GHCi
    CabalDocspec.Lexer
    CabalDocspec.Library
    CabalDocspec.Located
    CabalDocspec.Man
    CabalDocspec.Man.Content
    CabalDocspec.Opts
    CabalDocspec.Package
    CabalDocspec.Phase1
    CabalDocspec.Phase2
    CabalDocspec.Summary
    CabalDocspec.Trace
    CabalDocspec.Warning
    System.Process.Interactive

  -- ghc-boot dependencies
  -- cabal-fmt: fragment ../fragments/boot-deps.fragment
  build-depends:
    , base              ^>=4.19.0.0
    , binary            ^>=0.8.9.0
    , bytestring        ^>=0.12.0.2
    , containers        ^>=0.6.8
    , deepseq           ^>=1.5.0.0
    , directory         ^>=1.3.8.1
    , filepath          ^>=1.4.100.4
    , mtl               ^>=2.3.1
    , parsec            ^>=3.1.17.0
    , pretty            ^>=1.1.3.6
    , process           ^>=1.6.18.0
    , stm               ^>=2.5.0.0
    , template-haskell
    , text              ^>=2.1

  -- We use Cabal-3.12
  build-depends:      Cabal ^>=3.12.1.0

  -- We also use peura
  build-depends:      peura

  -- vendored cpphs, so we can integrate warnings
  build-depends:      internal-cpphs

  -- dependencies in library
  build-depends:
    , ansi-terminal          ^>=1.1
    , async                  ^>=2.2.2
    , cabal-install-parsers  ^>=0.6
    , cabal-plan             ^>=0.7.0.0
    , Glob                   ^>=0.10.0
    , haskell-lexer          ^>=1.2.1
    , optparse-applicative   ^>=0.18.0.0
    , splitmix               ^>=0.1.0.3
    , unliftio-core          ^>=0.2.0.1
    , vector                 ^>=0.13.0.0

  default-extensions:
    NoImplicitPrelude
    OverloadedStrings

executable cabal-docspec
  default-language: Haskell2010
  hs-source-dirs:   cli
  main-is:          Main.hs
  ghc-options:      -Wall -rtsopts -threaded
  build-depends:
    , base
    , cabal-docspec-internal

test-suite cabal-docspec-tests
  default-language: Haskell2010
  type:             exitcode-stdio-1.0
  hs-source-dirs:   tests
  main-is:          tests.hs
  ghc-options:      -Wall -rtsopts -threaded
  build-depends:
    , base
    , cabal-docspec-internal
    , containers
    , tasty
    , tasty-hunit
